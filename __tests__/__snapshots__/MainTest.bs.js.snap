// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test1 - Basic functions 1`] = `
"type nano;

[@bs.val] external nano : (string, float) => nano = \\"Nano\\";
"
`;

exports[`test2 - Require statements, more than one statement 1`] = `
"type nano;

type blue;

[@bs.module] external nano : (float, string, float) => nano = \\"\\";

[@bs.module] external blue : string => blue = \\"\\";
"
`;

exports[`test3 - Track identifiers across statements 1`] = `
"type nano;

[@bs.module] external nano : (float, string, float) => nano = \\"\\";
"
`;

exports[`test4 - Single require 1`] = `
"type blue;
"
`;

exports[`test5 - Basic object property access 1`] = `
"type nano;

type db;

type test;

type blue;

type pill;

type jump;

[@bs.module] external nano : string => nano = \\"\\";

[@bs.get] external db : nano => db = \\"\\";

[@bs.send] external test : (db, float) => test = \\"\\";

[@bs.module] external blue : blue = \\"\\";

[@bs.get] external pill : blue => pill = \\"\\";

[@bs.send] external jump : (pill, float) => jump = \\"\\";
"
`;

exports[`test6 - Functions as callbacks 1`] = `
"type nano;

type err;

type body;

type headers;

type callback;

type db;

type create;

[@bs.module] external nano : string => nano = \\"\\";

[@bs.get] external db : nano => db = \\"\\";

[@bs.send]
external create : (db, string, (err, body, headers) => callback) => create =
  \\"\\";
"
`;

exports[`test7 - Object constants 1`] = `
"type airtable2;

type configureParam;

type configure;

[@bs.obj]
external makeConfigureParam :
  (~apiKey: string, ~endpointUrl: string, unit) => configureParam =
  \\"\\";

[@bs.module] external airtable2 : airtable2 = \\"airtable\\";

[@bs.send] external configure : (airtable2, configureParam) => configure = \\"\\";
"
`;

exports[`test8 - Objects, properties, callbacks, modules 1`] = `
"type airtable2;

type configureParam;

type configure;

type base;

type records;

type fetchNextPage;

type page;

type err;

type done_;

type selectParam;

type select;

type eachPage;

[@bs.obj]
external makeConfigureParam :
  (~apiKey: string, ~endpointUrl: string, unit) => configureParam =
  \\"\\";

[@bs.module] external airtable2 : airtable2 = \\"airtable\\";

[@bs.send] external configure : (airtable2, configureParam) => configure = \\"\\";

[@bs.send] external base : (airtable2, string) => base = \\"\\";

[@bs.obj]
external makeSelectParam :
  (~view: string, ~maxRecords: float, unit) => selectParam =
  \\"\\";

[@bs.send] external select : (base, selectParam) => select = \\"\\";

[@bs.send]
external eachPage :
  (select, (records, fetchNextPage) => page, err => done_) => eachPage =
  \\"\\";
"
`;

exports[`test9 - Identifiers with same name 1`] = `
"type jPush;

type jPush2;

type initPush;

[@bs.val] external jPush : jPush = \\"JPush\\";

[@bs.get] external jPush2 : jPush => jPush2 = \\"jPush\\";

[@bs.send] external initPush : jPush2 => initPush = \\"\\";
"
`;

exports[`test10 - Stripe example 1`] = `
"type stripe;

type createParam;

type err;

type customer;

type callback;

type customers;

type create;

[@bs.module] external stripe : string => stripe = \\"\\";

[@bs.obj]
external makeCreateParam : (~email: string, unit) => createParam = \\"\\";

[@bs.get] external customers : stripe => customers = \\"\\";

[@bs.send]
external create :
  (customers, createParam, (err, customer) => callback) => create =
  \\"\\";
"
`;

exports[`test11 - Case with \`new\` 1`] = `
"type graphqlEndpoint;

type region;

type authenticationType;

type apiKey;

type aWSAppSyncClientParam;

type aWSAppSyncClient;

[@bs.obj]
external makeAWSAppSyncClientParam :
  (~apiKey: apiKey, ~type: authenticationType, unit) => aWSAppSyncClientParam =
  \\"\\";

[@bs.new]
external aWSAppSyncClient : aWSAppSyncClientParam => aWSAppSyncClient =
  \\"AWSAppSyncClient\\";
"
`;

exports[`test12 - \`new\` from a module 1`] = `
"type somethingBlue;

[@bs.new] [@bs.module]
external somethingBlue : string => somethingBlue = \\"SomethingBlue\\";
"
`;

exports[`test13 - named \`import\` 1`] = `
"type blue;

[@bs.module \\"SomethingBlue\\"] external blue : string => blue = \\"Blue\\";
"
`;
